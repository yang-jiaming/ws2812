<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [ws2812\ws2812.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image ws2812\ws2812.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060750: Last Updated: Fri Oct 22 00:44:25 2021
<BR><P>
<H3>Maximum Stack Usage =        136 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; SystemClock_Config &rArr; HAL_RCC_ClockConfig &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1c]">ADC1_2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1c]">ADC1_2_IRQHandler</a><BR>
 <LI><a href="#[4]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">BusFault_Handler</a><BR>
 <LI><a href="#[2]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">HardFault_Handler</a><BR>
 <LI><a href="#[3]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">MemManage_Handler</a><BR>
 <LI><a href="#[1]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1]">NMI_Handler</a><BR>
 <LI><a href="#[5]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">UsageFault_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1c]">ADC1_2_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[39]">ADC3_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[4]">BusFault_Handler</a> from stm32f1xx_it.o(i.BusFault_Handler) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[1f]">CAN1_RX1_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[20]">CAN1_SCE_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[15]">DMA1_Channel1_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[16]">DMA1_Channel2_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[17]">DMA1_Channel3_IRQHandler</a> from stm32f1xx_it.o(i.DMA1_Channel3_IRQHandler) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[18]">DMA1_Channel4_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[19]">DMA1_Channel5_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[1a]">DMA1_Channel6_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[1b]">DMA1_Channel7_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[42]">DMA2_Channel1_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[43]">DMA2_Channel2_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[44]">DMA2_Channel3_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[45]">DMA2_Channel4_5_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[7]">DebugMon_Handler</a> from stm32f1xx_it.o(i.DebugMon_Handler) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[10]">EXTI0_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[32]">EXTI15_10_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[11]">EXTI1_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[12]">EXTI2_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[13]">EXTI3_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[14]">EXTI4_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[21]">EXTI9_5_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[e]">FLASH_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[3a]">FSMC_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from stm32f1xx_it.o(i.HardFault_Handler) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[2a]">I2C1_ER_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[29]">I2C1_EV_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[2c]">I2C2_ER_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[2b]">I2C2_EV_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[3]">MemManage_Handler</a> from stm32f1xx_it.o(i.MemManage_Handler) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from stm32f1xx_it.o(i.NMI_Handler) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[b]">PVD_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[8]">PendSV_Handler</a> from stm32f1xx_it.o(i.PendSV_Handler) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[f]">RCC_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[33]">RTC_Alarm_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[d]">RTC_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[3b]">SDIO_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[2d]">SPI1_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[2e]">SPI2_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[3d]">SPI3_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[4b]">SPI_DMAError</a> from stm32f1xx_hal_spi.o(i.SPI_DMAError) referenced from stm32f1xx_hal_spi.o(i.HAL_SPI_Transmit_DMA)
 <LI><a href="#[49]">SPI_DMAHalfTransmitCplt</a> from stm32f1xx_hal_spi.o(i.SPI_DMAHalfTransmitCplt) referenced from stm32f1xx_hal_spi.o(i.HAL_SPI_Transmit_DMA)
 <LI><a href="#[4a]">SPI_DMATransmitCplt</a> from stm32f1xx_hal_spi.o(i.SPI_DMATransmitCplt) referenced from stm32f1xx_hal_spi.o(i.HAL_SPI_Transmit_DMA)
 <LI><a href="#[6]">SVC_Handler</a> from stm32f1xx_it.o(i.SVC_Handler) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[9]">SysTick_Handler</a> from stm32f1xx_it.o(i.SysTick_Handler) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[47]">SystemInit</a> from system_stm32f1xx.o(i.SystemInit) referenced from startup_stm32f103xe.o(.text)
 <LI><a href="#[c]">TAMPER_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[22]">TIM1_BRK_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[25]">TIM1_CC_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[24]">TIM1_TRG_COM_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[23]">TIM1_UP_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[26]">TIM2_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[27]">TIM3_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[28]">TIM4_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[3c]">TIM5_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[40]">TIM6_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[41]">TIM7_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[35]">TIM8_BRK_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[38]">TIM8_CC_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[37]">TIM8_TRG_COM_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[36]">TIM8_UP_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[3e]">UART4_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[3f]">UART5_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[2f]">USART1_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[30]">USART2_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[31]">USART3_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[34]">USBWakeUp_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[1d]">USB_HP_CAN1_TX_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[1e]">USB_LP_CAN1_RX0_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[5]">UsageFault_Handler</a> from stm32f1xx_it.o(i.UsageFault_Handler) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[a]">WWDG_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[48]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_stm32f103xe.o(.text)
 <LI><a href="#[46]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
 <LI><a href="#[83]">mode_bicolor_chase</a> from ws2812b_fx.o(i.mode_bicolor_chase) referenced from ws2812b_fx.o(.data)
 <LI><a href="#[4e]">mode_black_to_color</a> from ws2812b_fx.o(i.mode_black_to_color) referenced from ws2812b_fx.o(.data)
 <LI><a href="#[4f]">mode_blink</a> from ws2812b_fx.o(i.mode_blink) referenced from ws2812b_fx.o(.data)
 <LI><a href="#[50]">mode_blink_rainbow</a> from ws2812b_fx.o(i.mode_blink_rainbow) referenced from ws2812b_fx.o(.data)
 <LI><a href="#[53]">mode_breath</a> from ws2812b_fx.o(i.mode_breath) referenced from ws2812b_fx.o(.data)
 <LI><a href="#[74]">mode_chase_blackout</a> from ws2812b_fx.o(i.mode_chase_blackout) referenced from ws2812b_fx.o(.data)
 <LI><a href="#[75]">mode_chase_blackout_rainbow</a> from ws2812b_fx.o(i.mode_chase_blackout_rainbow) referenced from ws2812b_fx.o(.data)
 <LI><a href="#[6e]">mode_chase_color</a> from ws2812b_fx.o(i.mode_chase_color) referenced from ws2812b_fx.o(.data)
 <LI><a href="#[71]">mode_chase_flash</a> from ws2812b_fx.o(i.mode_chase_flash) referenced from ws2812b_fx.o(.data)
 <LI><a href="#[72]">mode_chase_flash_random</a> from ws2812b_fx.o(i.mode_chase_flash_random) referenced from ws2812b_fx.o(.data)
 <LI><a href="#[70]">mode_chase_rainbow</a> from ws2812b_fx.o(i.mode_chase_rainbow) referenced from ws2812b_fx.o(.data)
 <LI><a href="#[73]">mode_chase_rainbow_white</a> from ws2812b_fx.o(i.mode_chase_rainbow_white) referenced from ws2812b_fx.o(.data)
 <LI><a href="#[6f]">mode_chase_random</a> from ws2812b_fx.o(i.mode_chase_random) referenced from ws2812b_fx.o(.data)
 <LI><a href="#[6d]">mode_chase_white</a> from ws2812b_fx.o(i.mode_chase_white) referenced from ws2812b_fx.o(.data)
 <LI><a href="#[81]">mode_circus_combustus</a> from ws2812b_fx.o(i.mode_circus_combustus) referenced from ws2812b_fx.o(.data)
 <LI><a href="#[59]">mode_color_sweep_random</a> from ws2812b_fx.o(i.mode_color_sweep_random) referenced from ws2812b_fx.o(.data)
 <LI><a href="#[54]">mode_color_wipe</a> from ws2812b_fx.o(i.mode_color_wipe) referenced from ws2812b_fx.o(.data)
 <LI><a href="#[55]">mode_color_wipe_inv</a> from ws2812b_fx.o(i.mode_color_wipe_inv) referenced from ws2812b_fx.o(.data)
 <LI><a href="#[58]">mode_color_wipe_random</a> from ws2812b_fx.o(i.mode_color_wipe_random) referenced from ws2812b_fx.o(.data)
 <LI><a href="#[56]">mode_color_wipe_rev</a> from ws2812b_fx.o(i.mode_color_wipe_rev) referenced from ws2812b_fx.o(.data)
 <LI><a href="#[57]">mode_color_wipe_rev_inv</a> from ws2812b_fx.o(i.mode_color_wipe_rev_inv) referenced from ws2812b_fx.o(.data)
 <LI><a href="#[7a]">mode_comet</a> from ws2812b_fx.o(i.mode_comet) referenced from ws2812b_fx.o(.data)
 <LI><a href="#[61]">mode_dual_scan</a> from ws2812b_fx.o(i.mode_dual_scan) referenced from ws2812b_fx.o(.data)
 <LI><a href="#[5f]">mode_fade</a> from ws2812b_fx.o(i.mode_fade) referenced from ws2812b_fx.o(.data)
 <LI><a href="#[7e]">mode_fire_flicker</a> from ws2812b_fx.o(i.mode_fire_flicker) referenced from ws2812b_fx.o(.data)
 <LI><a href="#[80]">mode_fire_flicker_intense</a> from ws2812b_fx.o(i.mode_fire_flicker_intense) referenced from ws2812b_fx.o(.data)
 <LI><a href="#[7f]">mode_fire_flicker_soft</a> from ws2812b_fx.o(i.mode_fire_flicker_soft) referenced from ws2812b_fx.o(.data)
 <LI><a href="#[7b]">mode_fireworks</a> from ws2812b_fx.o(i.mode_fireworks) referenced from ws2812b_fx.o(.data)
 <LI><a href="#[7c]">mode_fireworks_random</a> from ws2812b_fx.o(i.mode_fireworks_random) referenced from ws2812b_fx.o(.data)
 <LI><a href="#[6a]">mode_flash_sparkle</a> from ws2812b_fx.o(i.mode_flash_sparkle) referenced from ws2812b_fx.o(.data)
 <LI><a href="#[82]">mode_halloween</a> from ws2812b_fx.o(i.mode_halloween) referenced from ws2812b_fx.o(.data)
 <LI><a href="#[6b]">mode_hyper_sparkle</a> from ws2812b_fx.o(i.mode_hyper_sparkle) referenced from ws2812b_fx.o(.data)
 <LI><a href="#[85]">mode_icu</a> from ws2812b_fx.o(i.mode_icu) referenced from ws2812b_fx.o(.data)
 <LI><a href="#[79]">mode_larson_scanner</a> from ws2812b_fx.o(i.mode_larson_scanner) referenced from ws2812b_fx.o(.data)
 <LI><a href="#[7d]">mode_merry_christmas</a> from ws2812b_fx.o(i.mode_merry_christmas) referenced from ws2812b_fx.o(.data)
 <LI><a href="#[5c]">mode_multi_dynamic</a> from ws2812b_fx.o(i.mode_multi_dynamic) referenced from ws2812b_fx.o(.data)
 <LI><a href="#[6c]">mode_multi_strobe</a> from ws2812b_fx.o(i.mode_multi_strobe) referenced from ws2812b_fx.o(.data)
 <LI><a href="#[5d]">mode_rainbow</a> from ws2812b_fx.o(i.mode_rainbow) referenced from ws2812b_fx.o(.data)
 <LI><a href="#[5e]">mode_rainbow_cycle</a> from ws2812b_fx.o(i.mode_rainbow_cycle) referenced from ws2812b_fx.o(.data)
 <LI><a href="#[5a]">mode_random_color</a> from ws2812b_fx.o(i.mode_random_color) referenced from ws2812b_fx.o(.data)
 <LI><a href="#[76]">mode_running_color</a> from ws2812b_fx.o(i.mode_running_color) referenced from ws2812b_fx.o(.data)
 <LI><a href="#[64]">mode_running_lights</a> from ws2812b_fx.o(i.mode_running_lights) referenced from ws2812b_fx.o(.data)
 <LI><a href="#[78]">mode_running_random</a> from ws2812b_fx.o(i.mode_running_random) referenced from ws2812b_fx.o(.data)
 <LI><a href="#[77]">mode_running_red_blue</a> from ws2812b_fx.o(i.mode_running_red_blue) referenced from ws2812b_fx.o(.data)
 <LI><a href="#[60]">mode_scan</a> from ws2812b_fx.o(i.mode_scan) referenced from ws2812b_fx.o(.data)
 <LI><a href="#[5b]">mode_single_dynamic</a> from ws2812b_fx.o(i.mode_single_dynamic) referenced from ws2812b_fx.o(.data)
 <LI><a href="#[69]">mode_sparkle</a> from ws2812b_fx.o(i.mode_sparkle) referenced from ws2812b_fx.o(.data)
 <LI><a href="#[4c]">mode_static</a> from ws2812b_fx.o(i.mode_static) referenced from ws2812b_fx.o(.data)
 <LI><a href="#[51]">mode_strobe</a> from ws2812b_fx.o(i.mode_strobe) referenced from ws2812b_fx.o(.data)
 <LI><a href="#[52]">mode_strobe_rainbow</a> from ws2812b_fx.o(i.mode_strobe_rainbow) referenced from ws2812b_fx.o(.data)
 <LI><a href="#[62]">mode_theater_chase</a> from ws2812b_fx.o(i.mode_theater_chase) referenced from ws2812b_fx.o(.data)
 <LI><a href="#[63]">mode_theater_chase_rainbow</a> from ws2812b_fx.o(i.mode_theater_chase_rainbow) referenced from ws2812b_fx.o(.data)
 <LI><a href="#[84]">mode_tricolor_chase</a> from ws2812b_fx.o(i.mode_tricolor_chase) referenced from ws2812b_fx.o(.data)
 <LI><a href="#[65]">mode_twinkle</a> from ws2812b_fx.o(i.mode_twinkle) referenced from ws2812b_fx.o(.data)
 <LI><a href="#[67]">mode_twinkle_fade</a> from ws2812b_fx.o(i.mode_twinkle_fade) referenced from ws2812b_fx.o(.data)
 <LI><a href="#[68]">mode_twinkle_fade_random</a> from ws2812b_fx.o(i.mode_twinkle_fade_random) referenced from ws2812b_fx.o(.data)
 <LI><a href="#[66]">mode_twinkle_random</a> from ws2812b_fx.o(i.mode_twinkle_random) referenced from ws2812b_fx.o(.data)
 <LI><a href="#[4d]">mode_white_to_color</a> from ws2812b_fx.o(i.mode_white_to_color) referenced from ws2812b_fx.o(.data)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[48]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(.text)
</UL>
<P><STRONG><a name="[d8]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[86]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[8d]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[d9]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[da]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[db]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[dc]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[dd]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>ADC1_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>ADC3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>CAN1_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>CAN1_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>DMA1_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>DMA1_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>DMA1_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>DMA1_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>DMA1_Channel7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>DMA2_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>DMA2_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>DMA2_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>DMA2_Channel4_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>FSMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>RTC_Alarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>SDIO_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>TAMPER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>TIM1_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>TIM1_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>TIM1_UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>TIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>TIM5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>TIM6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>TIM7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>TIM8_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>TIM8_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>TIM8_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>TIM8_UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>UART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>USART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>USBWakeUp_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>USB_HP_CAN1_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>USB_LP_CAN1_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[c3]"></a>rand</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, rand.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;twinkle_fade
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;twinkle
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_twinkle_random
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_twinkle_fade_random
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_sparkle
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_single_dynamic
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_multi_dynamic
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_icu
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_hyper_sparkle
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_flash_sparkle
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_fireworks_random
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_random_wheel_index
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fireworks
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fire_flicker
</UL>

<P><STRONG><a name="[de]"></a>srand</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, rand.o(.text), UNUSED)

<P><STRONG><a name="[89]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[df]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[e0]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[88]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[b2]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[e1]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[8a]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[8b]"></a>calloc</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, calloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = calloc &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WS2812BFX_Init
</UL>

<P><STRONG><a name="[87]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[e2]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[4]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f1xx_it.o(i.BusFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>DMA1_Channel3_IRQHandler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f1xx_it.o(i.DMA1_Channel3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = DMA1_Channel3_IRQHandler &rArr; HAL_DMA_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f1xx_it.o(i.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[a3]"></a>Error_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, main.o(i.Error_Handler))
<BR><BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_MspInit
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_SPI1_Init
</UL>

<P><STRONG><a name="[9e]"></a>HAL_DMA_Abort</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, stm32f1xx_hal_dma.o(i.HAL_DMA_Abort))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_DMA_Abort
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_DMAStop
</UL>

<P><STRONG><a name="[bb]"></a>HAL_DMA_GetState</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f1xx_hal_dma.o(i.HAL_DMA_GetState))
<BR><BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WS2812B_Refresh
</UL>

<P><STRONG><a name="[8e]"></a>HAL_DMA_IRQHandler</STRONG> (Thumb, 552 bytes, Stack size 40 bytes, stm32f1xx_hal_dma.o(i.HAL_DMA_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_DMA_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel3_IRQHandler
</UL>

<P><STRONG><a name="[a2]"></a>HAL_DMA_Init</STRONG> (Thumb, 112 bytes, Stack size 12 bytes, stm32f1xx_hal_dma.o(i.HAL_DMA_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = HAL_DMA_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_MspInit
</UL>

<P><STRONG><a name="[8f]"></a>HAL_DMA_Start_IT</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, stm32f1xx_hal_dma.o(i.HAL_DMA_Start_IT))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = HAL_DMA_Start_IT &rArr; DMA_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Transmit_DMA
</UL>

<P><STRONG><a name="[91]"></a>HAL_Delay</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, stm32f1xx_hal.o(i.HAL_Delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a1]"></a>HAL_GPIO_Init</STRONG> (Thumb, 462 bytes, Stack size 40 bytes, stm32f1xx_hal_gpio.o(i.HAL_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_MspInit
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
</UL>

<P><STRONG><a name="[aa]"></a>HAL_GPIO_WritePin</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f1xx_hal_gpio.o(i.HAL_GPIO_WritePin))
<BR><BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
</UL>

<P><STRONG><a name="[92]"></a>HAL_GetTick</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f1xx_hal.o(i.HAL_GetTick))
<BR><BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WaitFlagStateUntilTimeout
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_DMATransmitCplt
</UL>

<P><STRONG><a name="[af]"></a>HAL_IncTick</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f1xx_hal.o(i.HAL_IncTick))
<BR><BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[93]"></a>HAL_Init</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, stm32f1xx_hal.o(i.HAL_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_Init &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MspInit
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriorityGrouping
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[95]"></a>HAL_InitTick</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, stm32f1xx_hal.o(i.HAL_InitTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HAL_InitTick &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[96]"></a>HAL_MspInit</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, stm32f1xx_hal_msp.o(i.HAL_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[a8]"></a>HAL_NVIC_EnableIRQ</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f1xx_hal_cortex.o(i.HAL_NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_DMA_Init
</UL>

<P><STRONG><a name="[98]"></a>HAL_NVIC_SetPriority</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, stm32f1xx_hal_cortex.o(i.HAL_NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_DMA_Init
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[94]"></a>HAL_NVIC_SetPriorityGrouping</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f1xx_hal_cortex.o(i.HAL_NVIC_SetPriorityGrouping))
<BR><BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[9a]"></a>HAL_RCC_ClockConfig</STRONG> (Thumb, 280 bytes, Stack size 32 bytes, stm32f1xx_hal_rcc.o(i.HAL_RCC_ClockConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = HAL_RCC_ClockConfig &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[9b]"></a>HAL_RCC_GetSysClockFreq</STRONG> (Thumb, 74 bytes, Stack size 20 bytes, stm32f1xx_hal_rcc.o(i.HAL_RCC_GetSysClockFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = HAL_RCC_GetSysClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
</UL>

<P><STRONG><a name="[9c]"></a>HAL_RCC_OscConfig</STRONG> (Thumb, 778 bytes, Stack size 40 bytes, stm32f1xx_hal_rcc.o(i.HAL_RCC_OscConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_RCC_OscConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[9d]"></a>HAL_SPI_DMAStop</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, stm32f1xx_hal_spi.o(i.HAL_SPI_DMAStop))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_SPI_DMAStop &rArr; HAL_DMA_Abort
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Abort
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_TxHalfCpltCallback
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_TxCpltCallback
</UL>

<P><STRONG><a name="[ac]"></a>HAL_SPI_ErrorCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f1xx_hal_spi.o(i.HAL_SPI_ErrorCallback))
<BR><BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_DMATransmitCplt
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_DMAError
</UL>

<P><STRONG><a name="[9f]"></a>HAL_SPI_Init</STRONG> (Thumb, 178 bytes, Stack size 16 bytes, stm32f1xx_hal_spi.o(i.HAL_SPI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_SPI1_Init
</UL>

<P><STRONG><a name="[a0]"></a>HAL_SPI_MspInit</STRONG> (Thumb, 128 bytes, Stack size 40 bytes, spi.o(i.HAL_SPI_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Init
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Init
</UL>

<P><STRONG><a name="[a4]"></a>HAL_SPI_Transmit_DMA</STRONG> (Thumb, 202 bytes, Stack size 24 bytes, stm32f1xx_hal_spi.o(i.HAL_SPI_Transmit_DMA))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = HAL_SPI_Transmit_DMA &rArr; HAL_DMA_Start_IT &rArr; DMA_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Start_IT
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WS2812B_Refresh
</UL>

<P><STRONG><a name="[a5]"></a>HAL_SPI_TxCpltCallback</STRONG> (Thumb, 176 bytes, Stack size 24 bytes, ws2812b.o(i.HAL_SPI_TxCpltCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = HAL_SPI_TxCpltCallback &rArr; HAL_SPI_DMAStop &rArr; HAL_DMA_Abort
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_DMAStop
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_DMATransmitCplt
</UL>

<P><STRONG><a name="[a6]"></a>HAL_SPI_TxHalfCpltCallback</STRONG> (Thumb, 200 bytes, Stack size 24 bytes, ws2812b.o(i.HAL_SPI_TxHalfCpltCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = HAL_SPI_TxHalfCpltCallback &rArr; HAL_SPI_DMAStop &rArr; HAL_DMA_Abort
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_DMAStop
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_DMAHalfTransmitCplt
</UL>

<P><STRONG><a name="[b0]"></a>HAL_SYSTICK_Callback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, main.o(i.HAL_SYSTICK_Callback))
<BR><BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[97]"></a>HAL_SYSTICK_Config</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, stm32f1xx_hal_cortex.o(i.HAL_SYSTICK_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_SYSTICK_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f1xx_it.o(i.HardFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[a7]"></a>MX_DMA_Init</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, dma.o(i.MX_DMA_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = MX_DMA_Init &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a9]"></a>MX_GPIO_Init</STRONG> (Thumb, 138 bytes, Stack size 48 bytes, gpio.o(i.MX_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = MX_GPIO_Init &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ab]"></a>MX_SPI1_Init</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, spi.o(i.MX_SPI1_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = MX_SPI1_Init &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Init
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f1xx_it.o(i.MemManage_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f1xx_it.o(i.NMI_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f1xx_it.o(i.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f1xx_it.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>SysTick_Handler</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, stm32f1xx_it.o(i.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SysTick_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_IncTick
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Callback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[b1]"></a>SystemClock_Config</STRONG> (Thumb, 94 bytes, Stack size 72 bytes, main.o(i.SystemClock_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = SystemClock_Config &rArr; HAL_RCC_ClockConfig &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[47]"></a>SystemInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, system_stm32f1xx.o(i.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(.text)
</UL>
<P><STRONG><a name="[5]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f1xx_it.o(i.UsageFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[b3]"></a>WS2812BFX_Callback</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, ws2812b_fx.o(i.WS2812BFX_Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = WS2812BFX_Callback &rArr; WS2812B_Refresh &rArr; HAL_SPI_Transmit_DMA &rArr; HAL_DMA_Start_IT &rArr; DMA_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WS2812B_Refresh
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d7]"></a>WS2812BFX_HSVtoRGB</STRONG> (Thumb, 156 bytes, Stack size 20 bytes, ws2812b_fx.o(i.WS2812BFX_HSVtoRGB))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = WS2812BFX_HSVtoRGB
</UL>
<BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;to_color
</UL>

<P><STRONG><a name="[b5]"></a>WS2812BFX_Init</STRONG> (Thumb, 440 bytes, Stack size 40 bytes, ws2812b_fx.o(i.WS2812BFX_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = WS2812BFX_Init &rArr; calloc &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calloc
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d6]"></a>WS2812BFX_RGBtoHSV</STRONG> (Thumb, 162 bytes, Stack size 20 bytes, ws2812b_fx.o(i.WS2812BFX_RGBtoHSV))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = WS2812BFX_RGBtoHSV
</UL>
<BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;to_color
</UL>

<P><STRONG><a name="[b7]"></a>WS2812BFX_SetAll</STRONG> (Thumb, 80 bytes, Stack size 32 bytes, ws2812b_fx.o(i.WS2812BFX_SetAll))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = WS2812BFX_SetAll &rArr; WS2812B_SetDiodeRGB
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WS2812B_SetDiodeRGB
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WS2812BFX_SetSegmentSize
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_random_color
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blink
</UL>

<P><STRONG><a name="[b9]"></a>WS2812BFX_SetAllRGB</STRONG> (Thumb, 84 bytes, Stack size 32 bytes, ws2812b_fx.o(i.WS2812BFX_SetAllRGB))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = WS2812BFX_SetAllRGB &rArr; WS2812B_SetDiodeRGB
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WS2812B_SetDiodeRGB
</UL>
<BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;to_color
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_breath
</UL>

<P><STRONG><a name="[c9]"></a>WS2812BFX_SetColorRGB</STRONG> (Thumb, 34 bytes, Stack size 12 bytes, ws2812b_fx.o(i.WS2812BFX_SetColorRGB))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = WS2812BFX_SetColorRGB
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ca]"></a>WS2812BFX_SetMode</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, ws2812b_fx.o(i.WS2812BFX_SetMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WS2812BFX_SetMode
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ba]"></a>WS2812BFX_SetSegmentSize</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, ws2812b_fx.o(i.WS2812BFX_SetSegmentSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = WS2812BFX_SetSegmentSize &rArr; WS2812BFX_SetAll &rArr; WS2812B_SetDiodeRGB
</UL>
<BR>[Calls]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WS2812BFX_SetAll
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c8]"></a>WS2812BFX_SetSpeed</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, ws2812b_fx.o(i.WS2812BFX_SetSpeed))
<BR><BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[cb]"></a>WS2812BFX_Start</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, ws2812b_fx.o(i.WS2812BFX_Start))
<BR><BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c1]"></a>WS2812B_GetColor</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, ws2812b.o(i.WS2812B_GetColor))
<BR><BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_running_random
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fade_out
</UL>

<P><STRONG><a name="[c5]"></a>WS2812B_GetPixels</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ws2812b.o(i.WS2812B_GetPixels))
<BR><BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fireworks
</UL>

<P><STRONG><a name="[c7]"></a>WS2812B_Init</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ws2812b.o(i.WS2812B_Init))
<BR><BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b4]"></a>WS2812B_Refresh</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, ws2812b.o(i.WS2812B_Refresh))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = WS2812B_Refresh &rArr; HAL_SPI_Transmit_DMA &rArr; HAL_DMA_Start_IT &rArr; DMA_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Transmit_DMA
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_GetState
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WS2812BFX_Callback
</UL>

<P><STRONG><a name="[be]"></a>WS2812B_SetDiodeColor</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, ws2812b.o(i.WS2812B_SetDiodeColor))
<BR><BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;twinkle_fade
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;twinkle
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tricolor_chase
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;theater_chase
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;running
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_sparkle
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_single_dynamic
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_scan
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_running_random
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_rainbow_cycle
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_rainbow
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_multi_strobe
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_multi_dynamic
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_larson_scanner
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_icu
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_hyper_sparkle
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_flash_sparkle
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_fade
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_dual_scan
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_comet
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_chase_flash_random
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_chase_flash
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fireworks
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fade_out
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;color_wipe
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chase
</UL>

<P><STRONG><a name="[d2]"></a>WS2812B_SetDiodeColorStruct</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, ws2812b.o(i.WS2812B_SetDiodeColorStruct))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = WS2812B_SetDiodeColorStruct
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_static
</UL>

<P><STRONG><a name="[b8]"></a>WS2812B_SetDiodeRGB</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, ws2812b.o(i.WS2812B_SetDiodeRGB))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WS2812B_SetDiodeRGB
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_running_lights
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fire_flicker
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fade_out
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WS2812BFX_SetAllRGB
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WS2812BFX_SetAll
</UL>

<P><STRONG><a name="[e3]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[e4]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[e5]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[bc]"></a>blink</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, ws2812b_fx.o(i.blink))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = blink &rArr; WS2812BFX_SetAll &rArr; WS2812B_SetDiodeRGB
</UL>
<BR>[Calls]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WS2812BFX_SetAll
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_strobe_rainbow
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_strobe
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_blink_rainbow
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_blink
</UL>

<P><STRONG><a name="[bd]"></a>chase</STRONG> (Thumb, 250 bytes, Stack size 32 bytes, ws2812b_fx.o(i.chase))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = chase
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WS2812B_SetDiodeColor
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_chase_white
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_chase_random
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_chase_rainbow_white
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_chase_rainbow
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_chase_color
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_chase_blackout_rainbow
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_chase_blackout
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_bicolor_chase
</UL>

<P><STRONG><a name="[cf]"></a>color_blend</STRONG> (Thumb, 118 bytes, Stack size 20 bytes, ws2812b_fx.o(i.color_blend))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = color_blend
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_fade
</UL>

<P><STRONG><a name="[cd]"></a>color_wheel</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, ws2812b_fx.o(i.color_wheel))
<BR><BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_twinkle_random
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_twinkle_fade_random
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_theater_chase_rainbow
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_strobe_rainbow
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_single_dynamic
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_running_random
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_random_color
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_rainbow_cycle
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_rainbow
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_multi_dynamic
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_fireworks_random
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_color_wipe_random
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_color_sweep_random
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_chase_random
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_chase_rainbow_white
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_chase_rainbow
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_chase_flash_random
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_chase_blackout_rainbow
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_blink_rainbow
</UL>

<P><STRONG><a name="[bf]"></a>color_wipe</STRONG> (Thumb, 126 bytes, Stack size 24 bytes, ws2812b_fx.o(i.color_wipe))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = color_wipe
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WS2812B_SetDiodeColor
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_color_wipe_rev_inv
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_color_wipe_rev
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_color_wipe_random
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_color_wipe_inv
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_color_wipe
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_color_sweep_random
</UL>

<P><STRONG><a name="[c0]"></a>fade_out</STRONG> (Thumb, 230 bytes, Stack size 48 bytes, ws2812b_fx.o(i.fade_out))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = fade_out &rArr; WS2812B_SetDiodeRGB
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WS2812B_SetDiodeRGB
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WS2812B_SetDiodeColor
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WS2812B_GetColor
</UL>
<BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;twinkle_fade
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_larson_scanner
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_comet
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fireworks
</UL>

<P><STRONG><a name="[c2]"></a>fire_flicker</STRONG> (Thumb, 164 bytes, Stack size 32 bytes, ws2812b_fx.o(i.fire_flicker))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = fire_flicker &rArr; WS2812B_SetDiodeRGB
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WS2812B_SetDiodeRGB
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rand
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_fire_flicker_soft
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_fire_flicker_intense
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_fire_flicker
</UL>

<P><STRONG><a name="[c4]"></a>fireworks</STRONG> (Thumb, 268 bytes, Stack size 24 bytes, ws2812b_fx.o(i.fireworks))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = fireworks &rArr; fade_out &rArr; WS2812B_SetDiodeRGB
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WS2812B_SetDiodeColor
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WS2812B_GetPixels
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rand
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fade_out
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_fireworks_random
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_fireworks
</UL>

<P><STRONG><a name="[b6]"></a>free</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, malloc.o(i.free))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = free
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WS2812BFX_Init
</UL>

<P><STRONG><a name="[c6]"></a>get_random_wheel_index</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, ws2812b_fx.o(i.get_random_wheel_index))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = get_random_wheel_index
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rand
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_running_random
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_random_color
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_color_wipe_random
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_color_sweep_random
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_chase_random
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_chase_flash_random
</UL>

<P><STRONG><a name="[46]"></a>main</STRONG> (Thumb, 174 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = main &rArr; SystemClock_Config &rArr; HAL_RCC_ClockConfig &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WS2812B_Init
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WS2812BFX_Start
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WS2812BFX_SetSpeed
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WS2812BFX_SetSegmentSize
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WS2812BFX_SetMode
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WS2812BFX_SetColorRGB
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WS2812BFX_Init
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WS2812BFX_Callback
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_SPI1_Init
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_DMA_Init
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[8c]"></a>malloc</STRONG> (Thumb, 92 bytes, Stack size 20 bytes, malloc.o(i.malloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calloc
</UL>

<P><STRONG><a name="[83]"></a>mode_bicolor_chase</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, ws2812b_fx.o(i.mode_bicolor_chase))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = mode_bicolor_chase &rArr; chase
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chase
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ws2812b_fx.o(.data)
</UL>
<P><STRONG><a name="[4e]"></a>mode_black_to_color</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ws2812b_fx.o(i.mode_black_to_color))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = mode_black_to_color &rArr; to_color &rArr; WS2812BFX_SetAllRGB &rArr; WS2812B_SetDiodeRGB
</UL>
<BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;to_color
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ws2812b_fx.o(.data)
</UL>
<P><STRONG><a name="[4f]"></a>mode_blink</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, ws2812b_fx.o(i.mode_blink))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = mode_blink &rArr; blink &rArr; WS2812BFX_SetAll &rArr; WS2812B_SetDiodeRGB
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blink
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ws2812b_fx.o(.data)
</UL>
<P><STRONG><a name="[50]"></a>mode_blink_rainbow</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, ws2812b_fx.o(i.mode_blink_rainbow))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = mode_blink_rainbow &rArr; blink &rArr; WS2812BFX_SetAll &rArr; WS2812B_SetDiodeRGB
</UL>
<BR>[Calls]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;color_wheel
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blink
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ws2812b_fx.o(.data)
</UL>
<P><STRONG><a name="[53]"></a>mode_breath</STRONG> (Thumb, 170 bytes, Stack size 16 bytes, ws2812b_fx.o(i.mode_breath))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = mode_breath &rArr; WS2812BFX_SetAllRGB &rArr; WS2812B_SetDiodeRGB
</UL>
<BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WS2812BFX_SetAllRGB
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ws2812b_fx.o(.data)
</UL>
<P><STRONG><a name="[74]"></a>mode_chase_blackout</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, ws2812b_fx.o(i.mode_chase_blackout))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = mode_chase_blackout &rArr; chase
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chase
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ws2812b_fx.o(.data)
</UL>
<P><STRONG><a name="[75]"></a>mode_chase_blackout_rainbow</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, ws2812b_fx.o(i.mode_chase_blackout_rainbow))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = mode_chase_blackout_rainbow &rArr; chase
</UL>
<BR>[Calls]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;color_wheel
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chase
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ws2812b_fx.o(.data)
</UL>
<P><STRONG><a name="[6e]"></a>mode_chase_color</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, ws2812b_fx.o(i.mode_chase_color))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = mode_chase_color &rArr; chase
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chase
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ws2812b_fx.o(.data)
</UL>
<P><STRONG><a name="[71]"></a>mode_chase_flash</STRONG> (Thumb, 230 bytes, Stack size 24 bytes, ws2812b_fx.o(i.mode_chase_flash))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mode_chase_flash
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WS2812B_SetDiodeColor
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ws2812b_fx.o(.data)
</UL>
<P><STRONG><a name="[72]"></a>mode_chase_flash_random</STRONG> (Thumb, 312 bytes, Stack size 24 bytes, ws2812b_fx.o(i.mode_chase_flash_random))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = mode_chase_flash_random &rArr; get_random_wheel_index
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WS2812B_SetDiodeColor
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_random_wheel_index
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;color_wheel
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ws2812b_fx.o(.data)
</UL>
<P><STRONG><a name="[70]"></a>mode_chase_rainbow</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, ws2812b_fx.o(i.mode_chase_rainbow))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = mode_chase_rainbow &rArr; chase
</UL>
<BR>[Calls]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;color_wheel
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chase
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ws2812b_fx.o(.data)
</UL>
<P><STRONG><a name="[73]"></a>mode_chase_rainbow_white</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, ws2812b_fx.o(i.mode_chase_rainbow_white))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = mode_chase_rainbow_white &rArr; chase
</UL>
<BR>[Calls]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;color_wheel
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chase
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ws2812b_fx.o(.data)
</UL>
<P><STRONG><a name="[6f]"></a>mode_chase_random</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, ws2812b_fx.o(i.mode_chase_random))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = mode_chase_random &rArr; chase
</UL>
<BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_random_wheel_index
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;color_wheel
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chase
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ws2812b_fx.o(.data)
</UL>
<P><STRONG><a name="[6d]"></a>mode_chase_white</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, ws2812b_fx.o(i.mode_chase_white))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = mode_chase_white &rArr; chase
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chase
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ws2812b_fx.o(.data)
</UL>
<P><STRONG><a name="[81]"></a>mode_circus_combustus</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, ws2812b_fx.o(i.mode_circus_combustus))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = mode_circus_combustus &rArr; tricolor_chase
</UL>
<BR>[Calls]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tricolor_chase
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ws2812b_fx.o(.data)
</UL>
<P><STRONG><a name="[59]"></a>mode_color_sweep_random</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, ws2812b_fx.o(i.mode_color_sweep_random))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = mode_color_sweep_random &rArr; color_wipe
</UL>
<BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_random_wheel_index
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;color_wipe
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;color_wheel
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ws2812b_fx.o(.data)
</UL>
<P><STRONG><a name="[54]"></a>mode_color_wipe</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, ws2812b_fx.o(i.mode_color_wipe))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mode_color_wipe &rArr; color_wipe
</UL>
<BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;color_wipe
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ws2812b_fx.o(.data)
</UL>
<P><STRONG><a name="[55]"></a>mode_color_wipe_inv</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, ws2812b_fx.o(i.mode_color_wipe_inv))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mode_color_wipe_inv &rArr; color_wipe
</UL>
<BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;color_wipe
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ws2812b_fx.o(.data)
</UL>
<P><STRONG><a name="[58]"></a>mode_color_wipe_random</STRONG> (Thumb, 106 bytes, Stack size 8 bytes, ws2812b_fx.o(i.mode_color_wipe_random))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = mode_color_wipe_random &rArr; color_wipe
</UL>
<BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_random_wheel_index
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;color_wipe
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;color_wheel
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ws2812b_fx.o(.data)
</UL>
<P><STRONG><a name="[56]"></a>mode_color_wipe_rev</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, ws2812b_fx.o(i.mode_color_wipe_rev))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mode_color_wipe_rev &rArr; color_wipe
</UL>
<BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;color_wipe
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ws2812b_fx.o(.data)
</UL>
<P><STRONG><a name="[57]"></a>mode_color_wipe_rev_inv</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, ws2812b_fx.o(i.mode_color_wipe_rev_inv))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mode_color_wipe_rev_inv &rArr; color_wipe
</UL>
<BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;color_wipe
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ws2812b_fx.o(.data)
</UL>
<P><STRONG><a name="[7a]"></a>mode_comet</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, ws2812b_fx.o(i.mode_comet))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = mode_comet &rArr; fade_out &rArr; WS2812B_SetDiodeRGB
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WS2812B_SetDiodeColor
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fade_out
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ws2812b_fx.o(.data)
</UL>
<P><STRONG><a name="[61]"></a>mode_dual_scan</STRONG> (Thumb, 178 bytes, Stack size 16 bytes, ws2812b_fx.o(i.mode_dual_scan))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = mode_dual_scan
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WS2812B_SetDiodeColor
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ws2812b_fx.o(.data)
</UL>
<P><STRONG><a name="[5f]"></a>mode_fade</STRONG> (Thumb, 140 bytes, Stack size 16 bytes, ws2812b_fx.o(i.mode_fade))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = mode_fade &rArr; color_blend
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WS2812B_SetDiodeColor
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;color_blend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ws2812b_fx.o(.data)
</UL>
<P><STRONG><a name="[7e]"></a>mode_fire_flicker</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ws2812b_fx.o(i.mode_fire_flicker))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = mode_fire_flicker &rArr; fire_flicker &rArr; WS2812B_SetDiodeRGB
</UL>
<BR>[Calls]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fire_flicker
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ws2812b_fx.o(.data)
</UL>
<P><STRONG><a name="[80]"></a>mode_fire_flicker_intense</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ws2812b_fx.o(i.mode_fire_flicker_intense))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = mode_fire_flicker_intense &rArr; fire_flicker &rArr; WS2812B_SetDiodeRGB
</UL>
<BR>[Calls]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fire_flicker
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ws2812b_fx.o(.data)
</UL>
<P><STRONG><a name="[7f]"></a>mode_fire_flicker_soft</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ws2812b_fx.o(i.mode_fire_flicker_soft))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = mode_fire_flicker_soft &rArr; fire_flicker &rArr; WS2812B_SetDiodeRGB
</UL>
<BR>[Calls]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fire_flicker
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ws2812b_fx.o(.data)
</UL>
<P><STRONG><a name="[7b]"></a>mode_fireworks</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, ws2812b_fx.o(i.mode_fireworks))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = mode_fireworks &rArr; fireworks &rArr; fade_out &rArr; WS2812B_SetDiodeRGB
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fireworks
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ws2812b_fx.o(.data)
</UL>
<P><STRONG><a name="[7c]"></a>mode_fireworks_random</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, ws2812b_fx.o(i.mode_fireworks_random))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = mode_fireworks_random &rArr; fireworks &rArr; fade_out &rArr; WS2812B_SetDiodeRGB
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rand
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fireworks
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;color_wheel
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ws2812b_fx.o(.data)
</UL>
<P><STRONG><a name="[6a]"></a>mode_flash_sparkle</STRONG> (Thumb, 192 bytes, Stack size 16 bytes, ws2812b_fx.o(i.mode_flash_sparkle))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = mode_flash_sparkle
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WS2812B_SetDiodeColor
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rand
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ws2812b_fx.o(.data)
</UL>
<P><STRONG><a name="[82]"></a>mode_halloween</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ws2812b_fx.o(i.mode_halloween))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mode_halloween &rArr; running
</UL>
<BR>[Calls]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;running
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ws2812b_fx.o(.data)
</UL>
<P><STRONG><a name="[6b]"></a>mode_hyper_sparkle</STRONG> (Thumb, 192 bytes, Stack size 16 bytes, ws2812b_fx.o(i.mode_hyper_sparkle))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = mode_hyper_sparkle
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WS2812B_SetDiodeColor
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rand
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ws2812b_fx.o(.data)
</UL>
<P><STRONG><a name="[85]"></a>mode_icu</STRONG> (Thumb, 448 bytes, Stack size 16 bytes, ws2812b_fx.o(i.mode_icu))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = mode_icu
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WS2812B_SetDiodeColor
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rand
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ws2812b_fx.o(.data)
</UL>
<P><STRONG><a name="[79]"></a>mode_larson_scanner</STRONG> (Thumb, 168 bytes, Stack size 24 bytes, ws2812b_fx.o(i.mode_larson_scanner))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = mode_larson_scanner &rArr; fade_out &rArr; WS2812B_SetDiodeRGB
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WS2812B_SetDiodeColor
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fade_out
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ws2812b_fx.o(.data)
</UL>
<P><STRONG><a name="[7d]"></a>mode_merry_christmas</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ws2812b_fx.o(i.mode_merry_christmas))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mode_merry_christmas &rArr; running
</UL>
<BR>[Calls]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;running
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ws2812b_fx.o(.data)
</UL>
<P><STRONG><a name="[5c]"></a>mode_multi_dynamic</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, ws2812b_fx.o(i.mode_multi_dynamic))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = mode_multi_dynamic
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WS2812B_SetDiodeColor
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rand
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;color_wheel
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ws2812b_fx.o(.data)
</UL>
<P><STRONG><a name="[6c]"></a>mode_multi_strobe</STRONG> (Thumb, 196 bytes, Stack size 16 bytes, ws2812b_fx.o(i.mode_multi_strobe))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = mode_multi_strobe
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WS2812B_SetDiodeColor
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ws2812b_fx.o(.data)
</UL>
<P><STRONG><a name="[5d]"></a>mode_rainbow</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, ws2812b_fx.o(i.mode_rainbow))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = mode_rainbow
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WS2812B_SetDiodeColor
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;color_wheel
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ws2812b_fx.o(.data)
</UL>
<P><STRONG><a name="[5e]"></a>mode_rainbow_cycle</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, ws2812b_fx.o(i.mode_rainbow_cycle))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = mode_rainbow_cycle
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WS2812B_SetDiodeColor
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;color_wheel
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ws2812b_fx.o(.data)
</UL>
<P><STRONG><a name="[5a]"></a>mode_random_color</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, ws2812b_fx.o(i.mode_random_color))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = mode_random_color &rArr; WS2812BFX_SetAll &rArr; WS2812B_SetDiodeRGB
</UL>
<BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_random_wheel_index
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;color_wheel
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WS2812BFX_SetAll
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ws2812b_fx.o(.data)
</UL>
<P><STRONG><a name="[76]"></a>mode_running_color</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, ws2812b_fx.o(i.mode_running_color))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mode_running_color &rArr; running
</UL>
<BR>[Calls]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;running
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ws2812b_fx.o(.data)
</UL>
<P><STRONG><a name="[64]"></a>mode_running_lights</STRONG> (Thumb, 236 bytes, Stack size 32 bytes, ws2812b_fx.o(i.mode_running_lights))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = mode_running_lights &rArr; WS2812B_SetDiodeRGB
</UL>
<BR>[Calls]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sine8
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WS2812B_SetDiodeRGB
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ws2812b_fx.o(.data)
</UL>
<P><STRONG><a name="[78]"></a>mode_running_random</STRONG> (Thumb, 266 bytes, Stack size 16 bytes, ws2812b_fx.o(i.mode_running_random))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mode_running_random &rArr; get_random_wheel_index
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WS2812B_SetDiodeColor
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WS2812B_GetColor
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_random_wheel_index
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;color_wheel
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ws2812b_fx.o(.data)
</UL>
<P><STRONG><a name="[77]"></a>mode_running_red_blue</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ws2812b_fx.o(i.mode_running_red_blue))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mode_running_red_blue &rArr; running
</UL>
<BR>[Calls]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;running
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ws2812b_fx.o(.data)
</UL>
<P><STRONG><a name="[60]"></a>mode_scan</STRONG> (Thumb, 164 bytes, Stack size 16 bytes, ws2812b_fx.o(i.mode_scan))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = mode_scan
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WS2812B_SetDiodeColor
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ws2812b_fx.o(.data)
</UL>
<P><STRONG><a name="[5b]"></a>mode_single_dynamic</STRONG> (Thumb, 136 bytes, Stack size 16 bytes, ws2812b_fx.o(i.mode_single_dynamic))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = mode_single_dynamic
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WS2812B_SetDiodeColor
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rand
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;color_wheel
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ws2812b_fx.o(.data)
</UL>
<P><STRONG><a name="[69]"></a>mode_sparkle</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, ws2812b_fx.o(i.mode_sparkle))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = mode_sparkle
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WS2812B_SetDiodeColor
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rand
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ws2812b_fx.o(.data)
</UL>
<P><STRONG><a name="[4c]"></a>mode_static</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, ws2812b_fx.o(i.mode_static))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = mode_static &rArr; WS2812B_SetDiodeColorStruct
</UL>
<BR>[Calls]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WS2812B_SetDiodeColorStruct
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ws2812b_fx.o(.data)
</UL>
<P><STRONG><a name="[51]"></a>mode_strobe</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, ws2812b_fx.o(i.mode_strobe))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = mode_strobe &rArr; blink &rArr; WS2812BFX_SetAll &rArr; WS2812B_SetDiodeRGB
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blink
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ws2812b_fx.o(.data)
</UL>
<P><STRONG><a name="[52]"></a>mode_strobe_rainbow</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, ws2812b_fx.o(i.mode_strobe_rainbow))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = mode_strobe_rainbow &rArr; blink &rArr; WS2812BFX_SetAll &rArr; WS2812B_SetDiodeRGB
</UL>
<BR>[Calls]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;color_wheel
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blink
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ws2812b_fx.o(.data)
</UL>
<P><STRONG><a name="[62]"></a>mode_theater_chase</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, ws2812b_fx.o(i.mode_theater_chase))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mode_theater_chase &rArr; theater_chase
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;theater_chase
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ws2812b_fx.o(.data)
</UL>
<P><STRONG><a name="[63]"></a>mode_theater_chase_rainbow</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, ws2812b_fx.o(i.mode_theater_chase_rainbow))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = mode_theater_chase_rainbow &rArr; theater_chase
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;theater_chase
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;color_wheel
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ws2812b_fx.o(.data)
</UL>
<P><STRONG><a name="[84]"></a>mode_tricolor_chase</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, ws2812b_fx.o(i.mode_tricolor_chase))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = mode_tricolor_chase &rArr; tricolor_chase
</UL>
<BR>[Calls]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tricolor_chase
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ws2812b_fx.o(.data)
</UL>
<P><STRONG><a name="[65]"></a>mode_twinkle</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, ws2812b_fx.o(i.mode_twinkle))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mode_twinkle &rArr; twinkle
</UL>
<BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;twinkle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ws2812b_fx.o(.data)
</UL>
<P><STRONG><a name="[67]"></a>mode_twinkle_fade</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, ws2812b_fx.o(i.mode_twinkle_fade))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = mode_twinkle_fade &rArr; twinkle_fade &rArr; fade_out &rArr; WS2812B_SetDiodeRGB
</UL>
<BR>[Calls]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;twinkle_fade
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ws2812b_fx.o(.data)
</UL>
<P><STRONG><a name="[68]"></a>mode_twinkle_fade_random</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, ws2812b_fx.o(i.mode_twinkle_fade_random))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = mode_twinkle_fade_random &rArr; twinkle_fade &rArr; fade_out &rArr; WS2812B_SetDiodeRGB
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rand
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;twinkle_fade
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;color_wheel
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ws2812b_fx.o(.data)
</UL>
<P><STRONG><a name="[66]"></a>mode_twinkle_random</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, ws2812b_fx.o(i.mode_twinkle_random))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = mode_twinkle_random &rArr; twinkle
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rand
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;twinkle
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;color_wheel
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ws2812b_fx.o(.data)
</UL>
<P><STRONG><a name="[4d]"></a>mode_white_to_color</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ws2812b_fx.o(i.mode_white_to_color))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = mode_white_to_color &rArr; to_color &rArr; WS2812BFX_SetAllRGB &rArr; WS2812B_SetDiodeRGB
</UL>
<BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;to_color
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ws2812b_fx.o(.data)
</UL>
<P><STRONG><a name="[d0]"></a>running</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, ws2812b_fx.o(i.running))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = running
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WS2812B_SetDiodeColor
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_running_red_blue
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_running_color
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_merry_christmas
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_halloween
</UL>

<P><STRONG><a name="[d1]"></a>sine8</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ws2812b.o(i.sine8))
<BR><BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_running_lights
</UL>

<P><STRONG><a name="[d3]"></a>theater_chase</STRONG> (Thumb, 140 bytes, Stack size 24 bytes, ws2812b_fx.o(i.theater_chase))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = theater_chase
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WS2812B_SetDiodeColor
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_theater_chase_rainbow
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_theater_chase
</UL>

<P><STRONG><a name="[cc]"></a>to_color</STRONG> (Thumb, 256 bytes, Stack size 48 bytes, ws2812b_fx.o(i.to_color))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = to_color &rArr; WS2812BFX_SetAllRGB &rArr; WS2812B_SetDiodeRGB
</UL>
<BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WS2812BFX_SetAllRGB
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WS2812BFX_RGBtoHSV
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WS2812BFX_HSVtoRGB
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_white_to_color
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_black_to_color
</UL>

<P><STRONG><a name="[ce]"></a>tricolor_chase</STRONG> (Thumb, 152 bytes, Stack size 32 bytes, ws2812b_fx.o(i.tricolor_chase))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = tricolor_chase
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WS2812B_SetDiodeColor
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_tricolor_chase
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_circus_combustus
</UL>

<P><STRONG><a name="[d4]"></a>twinkle</STRONG> (Thumb, 170 bytes, Stack size 24 bytes, ws2812b_fx.o(i.twinkle))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = twinkle
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WS2812B_SetDiodeColor
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rand
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_twinkle_random
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_twinkle
</UL>

<P><STRONG><a name="[d5]"></a>twinkle_fade</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, ws2812b_fx.o(i.twinkle_fade))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = twinkle_fade &rArr; fade_out &rArr; WS2812B_SetDiodeRGB
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WS2812B_SetDiodeColor
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rand
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fade_out
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_twinkle_fade_random
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_twinkle_fade
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[4b]"></a>SPI_DMAError</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, stm32f1xx_hal_spi.o(i.SPI_DMAError))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SPI_DMAError
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_ErrorCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32f1xx_hal_spi.o(i.HAL_SPI_Transmit_DMA)
</UL>
<P><STRONG><a name="[49]"></a>SPI_DMAHalfTransmitCplt</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, stm32f1xx_hal_spi.o(i.SPI_DMAHalfTransmitCplt))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = SPI_DMAHalfTransmitCplt &rArr; HAL_SPI_TxHalfCpltCallback &rArr; HAL_SPI_DMAStop &rArr; HAL_DMA_Abort
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_TxHalfCpltCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32f1xx_hal_spi.o(i.HAL_SPI_Transmit_DMA)
</UL>
<P><STRONG><a name="[4a]"></a>SPI_DMATransmitCplt</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, stm32f1xx_hal_spi.o(i.SPI_DMATransmitCplt))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = SPI_DMATransmitCplt &rArr; HAL_SPI_TxCpltCallback &rArr; HAL_SPI_DMAStop &rArr; HAL_DMA_Abort
</UL>
<BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_TxCpltCallback
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_ErrorCallback
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_EndRxTxTransaction
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32f1xx_hal_spi.o(i.HAL_SPI_Transmit_DMA)
</UL>
<P><STRONG><a name="[ad]"></a>SPI_EndRxTxTransaction</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, stm32f1xx_hal_spi.o(i.SPI_EndRxTxTransaction))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = SPI_EndRxTxTransaction &rArr; SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_DMATransmitCplt
</UL>

<P><STRONG><a name="[ae]"></a>SPI_WaitFlagStateUntilTimeout</STRONG> (Thumb, 180 bytes, Stack size 32 bytes, stm32f1xx_hal_spi.o(i.SPI_WaitFlagStateUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_EndRxTxTransaction
</UL>

<P><STRONG><a name="[90]"></a>DMA_SetConfig</STRONG> (Thumb, 42 bytes, Stack size 12 bytes, stm32f1xx_hal_dma.o(i.DMA_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = DMA_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Start_IT
</UL>

<P><STRONG><a name="[99]"></a>__NVIC_SetPriority</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, stm32f1xx_hal_cortex.o(i.__NVIC_SetPriority))
<BR><BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Config
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
